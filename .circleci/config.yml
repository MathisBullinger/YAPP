version: 2

jobs:
  build:
    docker:
      - image: circleci/node:12
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run: echo $CACHE_KEY > _tmp_cache_key
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "_tmp_cache_key" }}-{{ checksum "package.json" }}
            - v1-dependencies-{{ checksum "_tmp_cache_key" }}-
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: Build
          command: npm run build
      - run:
          name: Move sourcemaps
          command: |
            rm public/*/*.map
            mkdir sourcemaps
            mv public/*.map sourcemaps
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "_tmp_cache_key" }}-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths: public

  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Deploy to S3
          command: |
            sudo apt install rsync
            rsync -avr public/ public/br --exclude="br" --exclude="gz" --ignore-existing
            rsync -avr public/ public/gz --exclude="br" --exclude="gz" --ignore-existing
            aws s3 sync public/ s3://yapp-frontend/ --exclude="gz/*" --exclude="br/*"
            aws s3 sync public/ s3://yapp-frontend/ --exclude="*" --include="gz/*" --content-encoding="gzip"
            aws s3 sync public/ s3://yapp-frontend/ --exclude="*" --include="br/*" --content-encoding="br"

  sentry:
    docker:
      - image: circleci/node:12
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Install Sentry CLI
          command: sudo npm install -g @sentry/cli --unsafe-perm
      - run:
          name: Create Sentry release
          command: |
            VERSION=$(cat ./.sentry-release)
            sentry-cli releases new -p "$SENTRY_PROJECT" "$VERSION"
            sentry-cli releases set-commits --auto "$VERSION"
            sentry-cli releases files "$VERSION" upload-sourcemaps ./sourcemaps
            sentry-cli releases finalize "$VERSION"

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - sentry:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
